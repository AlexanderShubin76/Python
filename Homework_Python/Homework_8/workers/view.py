# В данном модуле написаны методы, посредством которых пользователь взаимодействует с модулем model.
# Пользователь выбирать какие изменения он хочет внести в базу данными с сотрудниками.

import model as md

# Метод для выбора пользователем действий над базой данных.


def show_menu() -> int:
    print("\n" + "=" * 20)
    print("Выберите необходимое действие")
    print("1. Найти сотрудника")
    print("2. Сделать выборку сотрудников по должности")
    print("3. Сделать выборку сотрудников по зарплате")
    print("4. Добавить сотрудника")
    print("5. Удалить сотрудника")
    print("6. Обновить данные сотрудника")
    print("7. Экспортировать данные в формате json")
    print("8. Экспортировать данные в формате csv")
    print("9. Закончить работу")
    num = int(input("Введите номер необходимого действия: "))
    while (not 1<=num<=9):
            num = int(input("Ошибка ввода. Введите номер необходимого действия: "))
    return num
    
def get_id(): # Метод для ввода id сотрудника
    return input('Введите номер id сотрудника: ')
    
    
def print_workers(): # Метод для печать базы данных сотрудников
    for i in md.workers.items():
            print(f'{i}\n')
            
# # С помощью данного метода задаем новые данные для внесения в словарь, представляющий собой телефонную книгу
# def new_id(): 
#     id = input('Введите значение id новой записи в цифровом виде: ')
#     while(not id.isdigit()):
#         id = input('Ошибка ввода. Введите значение id новой записи в цифровом виде: ')
#     while (id in md.workers.keys()):
#         id = input('Такой id существует. Введите уникальное значение id для новой записи: ')
#     FIO = input('Введите ФИО для новой записи: ')
#     birth_date = input('Введите дату рождения для новой записи в формате //.//.//: ')
#     work_place = input('Введите место работы для новой записи: ')
#     tel_number_personal = input('Введите личный телефонный номер для новой записи или "-", если его нет: ')
#     tel_number_working = input('Введите рабочий телефонный номер для новой записи или "-", если его нет: ')
#     return (id, FIO, birth_date, work_place, tel_number_personal, tel_number_working)

# # С помощью данного метода указывем id записи, которую хотим удалить
# def remove_id(): #
#     rem_id = input('Введите значение id записи, которую хотите удалить: ')
#     while (rem_id not in md.workers.keys()):
#         rem_id = input('Такой id не существует. Введите значение id записи, которую хотите удалить: ')
#     return rem_id

# # С помощью данного метода изменяем данные id словаря, представляющим собой телефонную книгу.
# def rerecord_id(): 
#     id = input('Введите значение id записи, которую хотите перезаписать, в цифровом виде: ')
#     while (id not in md.workers.keys()):
#         id = input('Такой id не существует. Введите значение id записи, которую хотите перезаписать, в цифровом виде: ')
#     FIO = input('Введите ФИО для новой записи: ')
#     birth_date = input('Введите дату рождения для новой записи в формате //.//.//: ')
#     work_place = input('Введите место работы для новой записи: ')
#     tel_number_personal = input('Введите личный телефонный номер для новой записи или "-", если его нет: ')
#     tel_number_working = input('Введите рабочий телефонный номер для новой записи или "-", если его нет: ')
#     return (id, FIO, birth_date, work_place, tel_number_personal, tel_number_working)

# # С помощью данного метода выбираем формат файла для экспорта 
# def choice_export_format():
#     format_num = int(input('Введите "0", если не хотите экспортировать данные , "1" для экспорта данных в формат .txt'
#     ' и "2" для экспорта в формат .csv: '))
#     while (not 0<=format_num<=2):
#         format_num = int(input('Ошибка ввода. Введите "0", если не хотите экспортировать данные'
#         'Введите для "1" для экспорта данных в формат .txt и "2" для экспорта в формат .csv'))
#     return format_num
